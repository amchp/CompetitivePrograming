class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.size() == 0)return 0;
        vector<vector<pair<int, int> > > dp(matrix.size(), vector<pair<int, int> >(matrix[0].size(), pair<int, int>()));
        for(int i = 0; i < matrix.size(); ++i){
            for(int j = 0; j < matrix[0].size(); ++j){
                if(matrix[i][j] == '0'){
                    dp[i][j].first = -1;
                    dp[i][j].second = -1;
                }else{
                    if(j > 0)dp[i][j].first = dp[i][j - 1].first + 1;
                    else dp[i][j].first = 0;
                    if(i > 0)dp[i][j].second = dp[i - 1][j].second + 1;
                    else dp[i][j].second = 0;
                }
            }
        }
        int ans = 0;
        int r = 1e3;
        int c = 0;
        for(int i = matrix.size() - 1; i > -1; --i){
            for(int j = matrix[0].size() - 1; j > -1; --j){
                r = 1e3;
                c = 0;
                for(int k = j; k > -1; --k){
                    
                    if(matrix[i][k] == '0'){
                        r = 1e3;
                        c = 0;
                    }else{
                        r = min(r, dp[i][k].second);
                        c++;
                        ans = max(ans, (r + 1) * c);
                    }
                }
                
            }
        }
        for(int j = matrix[0].size() - 1; j > -1; --j){
            for(int i = matrix.size() - 1; i > -1; --i){
                r = 1e3;
                c = 0;
                for(int k = i; k > -1; --k){
                    if(matrix[k][j] == '0'){
                        r = 1e3;
                        c = 0;
                    }else{
                        r = min(r, dp[k][j].first);
                        c++;
                        ans = max(ans, (r + 1) * c);
                    }
                }
            }
        }
        return ans;
    }
};

// [["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]]
// []